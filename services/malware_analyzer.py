from os import PathLike
from typing import List
from malwarebazaar.api import Bazaar
from services import util


class MalwareAnalyzer:
    def __init__(self, api_key: str):
        self.bazaar = Bazaar(api_key)

    def __analyze_one_file(self, file: str | PathLike):
        file_hash = util.hash_file(file)
        response = self.bazaar.query_hash(file_hash)
        if response.get('query_status') != 'ok':
            return
        raw_data = response['data'][0]
        parsed_data = {
            'file_name': raw_data['file_name'],
            'file_size': raw_data['file_size'],
            'file_type': raw_data['file_type'],
            'file_path': file,
            'first_seen': raw_data['first_seen'],
            'last_seen': raw_data['last_seen'],
            'origin_country': raw_data['origin_country'],
            'sha256_hash': raw_data['sha256_hash'],
            'threat_name': raw_data['vendor_intel']['ReversingLabs']['threat_name']
        }
        return parsed_data

    def analyze(self, files: List[PathLike | str] | str | PathLike):
        if isinstance(files, List):
            return [self.__analyze_one_file(file) for file in files]

        return self.__analyze_one_file(files)

